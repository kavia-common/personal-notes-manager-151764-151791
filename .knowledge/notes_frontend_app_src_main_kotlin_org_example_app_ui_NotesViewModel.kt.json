{"is_source_file": true, "format": "Kotlin", "description": "This file defines a ViewModel class for managing notes within an Android application, including loading, searching, selecting, adding, updating, and deleting notes. It also manages UI state related to the notes list.", "external_files": ["org.example.app.data.NoteRepository", "org.example.app.model.Note"], "external_methods": ["repository.getAllNotes()", "repository.searchNotes(query)", "repository.insert(note)", "repository.delete(note)"], "published": ["NotesViewModel"], "classes": [{"name": "NotesViewModel", "description": "A ViewModel class responsible for handling the notes list and related UI state, using Kotlin coroutines and state flows."}], "methods": [{"name": "loadNotes", "description": "Loads all notes from the repository and updates the notes state flow."}, {"name": "search", "description": "Filters notes based on the search query and updates the notes state flow."}, {"name": "selectNote", "description": "Sets the currently selected note."}, {"name": "addOrUpdateNote", "description": "Inserts or updates a note in the repository and reloads the notes list."}, {"name": "deleteNote", "description": "Deletes a note from the repository and reloads the notes list."}], "calls": ["repository.getAllNotes()", "repository.searchNotes(query)", "repository.insert(note)", "repository.delete(note)", "viewModelScope.launch"], "search-terms": ["NotesViewModel", "ViewModel", "notes management", "search notes", "coroutines", "StateFlow"], "state": 2, "file_id": 7, "knowledge_revision": 25, "git_revision": "", "hash": "1f5fdc59737af22718467654e17570e5", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/app/src/main/kotlin/org/example/app/ui/NotesViewModel.kt", "revision_history": [{"25": ""}]}